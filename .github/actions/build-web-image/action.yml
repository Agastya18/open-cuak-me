name: Build and Push Docker Image
description: Builds and pushes a Docker image for a specific platform

inputs:
  image_name:
    description: 'The name of the Docker image'
    required: true
  dockerfile_path:
    description: 'Path to the Dockerfile'
    required: true
  context_path:
    description: 'The build context path'
    required: true
    default: '.'
  platform:
    description: 'The platform to build for (linux/amd64 or linux/arm64)'
    required: true
  target:
    description: 'The target stage in the Dockerfile'
    required: true
  registry:
    description: 'The container registry to push to'
    required: true
    default: 'ghcr.io'
  tag_suffix:
    description: 'Suffix to append to the image tags (e.g., -amd64, -arm64)'
    required: true
  github_token:
    description: 'GitHub token for authentication'
    required: true
  use_host_dependencies:
    description: 'Whether to use dependencies from the host machine'
    required: false
    default: 'false'

runs:
  using: composite
  steps:
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - name: Prepare host dependencies
      if: inputs.use_host_dependencies == 'true'
      shell: bash
      run: |
        echo "Preparing host dependencies for Docker build"
        mkdir -p .docker-host-deps
        cp -r node_modules .docker-host-deps/

    - name: Build and push docker image
      id: build-image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context_path }}
        file: ${{ inputs.dockerfile_path }}
        platforms: ${{ inputs.platform }}
        target: ${{ inputs.target }}
        tags: |
          ${{ inputs.registry }}/${{ inputs.image_name }}:${{ steps.commit.outputs.short }}${{ inputs.tag_suffix }}
          ${{ inputs.registry }}/${{ inputs.image_name }}:latest${{ inputs.tag_suffix }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          USE_HOST_DEPS=${{ inputs.use_host_dependencies }}
        build-contexts: |
          host-build=.docker-host-deps 
