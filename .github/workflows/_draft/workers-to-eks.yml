name: Deploy Aident Workers

on:
  push:
    branches:
      - main
      - ljhskyso
    paths:
      - 'apps/workers/**'
      - 'kube/workers-app-deployment.yaml'
      - '.github/workflows/workers.yml'

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: aident-workers
  EKS_CLUSTER_NAME: aident-ai-eks-cluster

jobs:
  deploy:
    name: Deploy Workers
    runs-on: ubuntu-latest
    steps:
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          docker build -f ./apps/workers/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg VERCEL_TOKEN=$VERCEL_TOKEN .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update kubeconfig for EKS cluster
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Deploy to EKS
        env:
          IMAGE: ${{ steps.build-image.outputs.image }}
        run: |
          sed -i.bak "s|DOCKER_IMAGE_PLACEHOLDER|$IMAGE|g" ./kube/workers-app-deployment.yaml
          kubectl apply --validate=false -f ./kube/workers-app-deployment.yaml
