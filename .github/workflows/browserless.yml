name: Deploy Browserless Service

on:
  workflow_run:
    workflows: ['Companion Extension CI']
    types:
      - completed
  workflow_dispatch:
permissions:
  contents: read
  packages: write

env:
  DOCK_IMAGE_NAME: aident-ai/open-cuak-browserless

jobs:
  on-failure:
    name: Previous Workflows Failed
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo "Previous workflow failed. Skipping deployment."

  on-success:
    name: Deploy Browserless
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Prepare extension app
      - name: Restore extension build cache
        uses: actions/cache/restore@v4
        with:
          path: ./apps/extension/out
          key: cache-extension-build:${{ steps.commit.outputs.short }}
      - name: Use browserless config for extension
        working-directory: ./apps/browserless
        run: |
          cp -f ./extension-override.config.json ./extension-out/config.json

      # Build browserless image
      - name: Install dependencies and build Vite bundle
        working-directory: ./apps/browserless
        run: |
          npm install -g pnpm
          pnpm install
          npm run vite-build-ts
      - name: Pull ENVs
        run: npm run envs:pull
        working-directory: ./
      - name: Use .env.production as .env
        run: |
          mv .env .env.local
          cp .env.production .env
        working-directory: ./apps/browserless
      - name: Build docker image
        id: build-image
        working-directory: ./apps/browserless
        run: |
          cp -r ../extension/out ./out
          docker build -f Dockerfile.production -t ${{ env.DOCK_IMAGE_NAME }}:${{ steps.commit.outputs.short }} .

      # Publish to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag Docker image for GHCR
        run: |
          docker tag ${{ env.DOCK_IMAGE_NAME }}:${{ steps.commit.outputs.short }} ghcr.io/${{ env.DOCK_IMAGE_NAME }}:${{ steps.commit.outputs.short }}
          docker tag ${{ env.DOCK_IMAGE_NAME }}:${{ steps.commit.outputs.short }} ghcr.io/${{ env.DOCK_IMAGE_NAME }}:latest
      - name: Push Docker image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ env.DOCK_IMAGE_NAME }}:${{ steps.commit.outputs.short }}
          docker push ghcr.io/${{ env.DOCK_IMAGE_NAME }}:latest
