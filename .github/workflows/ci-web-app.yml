name: CI Web App

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  DOCK_IMAGE_NAME: aident-ai/open-cuak-web

jobs:
  prettier:
    name: Prettier Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Run Prettier
        id: prettier-run
        uses: rutajdash/prettier-cli-action@v1.0.0
        with:
          config_path: ./.prettierrc
      - name: Prettier Output
        if: ${{ failure() }}
        shell: bash
        run: |
          echo "The following files are not formatted:"
          echo "${{steps.prettier-run.outputs.prettier_output}}"

  on-pull-request:
    name: Build Web App
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build NextJS App
        uses: ./.github/actions/build-web-app

  build-amd64:
    name: Build AMD64 Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build NextJS App
        uses: ./.github/actions/build-web-app
      - name: Build and push AMD64 docker image
        uses: ./.github/actions/build-web-image
        with:
          image_name: ${{ env.DOCK_IMAGE_NAME }}
          dockerfile_path: apps/web/Dockerfile
          context_path: .
          platform: linux/amd64
          target: runner-amd64
          registry: ghcr.io
          tag_suffix: -amd64
          github_token: ${{ secrets.GITHUB_TOKEN }}
          use_host_dependencies: 'true'

  build-arm64:
    name: Build ARM64 Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      # Set up QEMU to support ARM64
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build NextJS App
        uses: ./.github/actions/build-web-app
      - name: Build and push ARM64 docker image
        uses: ./.github/actions/build-web-image
        with:
          image_name: ${{ env.DOCK_IMAGE_NAME }}
          dockerfile_path: apps/web/Dockerfile
          context_path: .
          platform: linux/arm64
          target: runner-arm64
          registry: ghcr.io
          tag_suffix: -arm64
          github_token: ${{ secrets.GITHUB_TOKEN }}
          use_host_dependencies: 'true'

  create-manifest:
    name: Create Multi-Arch Manifest
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create and push multi-arch manifest
        run: |
          # Create and push the commit-tagged manifest
          docker buildx imagetools create --tag ghcr.io/${{ env.DOCK_IMAGE_NAME }}:${{ steps.commit.outputs.short }} \
            ghcr.io/${{ env.DOCK_IMAGE_NAME }}:${{ steps.commit.outputs.short }}-amd64 \
            ghcr.io/${{ env.DOCK_IMAGE_NAME }}:${{ steps.commit.outputs.short }}-arm64
            
          # Create and push the latest manifest
          docker buildx imagetools create --tag ghcr.io/${{ env.DOCK_IMAGE_NAME }}:latest \
            ghcr.io/${{ env.DOCK_IMAGE_NAME }}:latest-amd64 \
            ghcr.io/${{ env.DOCK_IMAGE_NAME }}:latest-arm64
